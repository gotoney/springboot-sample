<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zeecle.springboot.mapper.UserMapper">
	<insert id="addUser" parameterType="com.zeecle.springboot.pojo.User">
		insert into user(username, password, name, salt, state) 
			values (#{username}, #{password}, #{name}, #{salt}, #{state})
	</insert>
	<update id="updateUser" parameterType="com.zeecle.springboot.pojo.User">
		update user 
		<set>
			<if test="username != null">
				username = #{username, jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt, jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state, jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id, jdbcType=INTEGER}
	</update>
	
	<sql id="base_column_list">
		id, username, password, name, salt, state
	</sql>
	
	<select id="findByName" parameterType="java.lang.String" resultType="com.zeecle.springboot.pojo.User">
		select <include refid="base_column_list" />
		from t_sys_user 
		<where> 
			<if test="username != null">
				username = #{username, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<resultMap type="com.zeecle.springboot.pojo.UserVo" id="userPermission_resMap">
		<id column="id" property="id" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="name" property="name" />
		<result column="salt" property="salt" />
		<result column="state" property="state" />
		<collection property="roles" ofType="com.zeecle.springboot.pojo.RoleVo">
			<id column="rid" property="id" />
			<result column="role" property="role" />
			<result column="desc" property="desc" />
			<result column="r_available" property="available" />
			<collection property="permissions" ofType="com.zeecle.springboot.pojo.Permission">
				<id column="pid" property="id" />
				<result column="pname" property="name" />
				<result column="type" property="type" />
				<result column="url" property="url" />
				<result column="permission" property="permission" />
				<result column="parent_id" property="parentId" />
				<result column="parent_ids" property="parentIds" />
				<result column="p_available" property="available" />
			</collection>
		</collection>
	</resultMap>
	
	<sql id="user_permission_column_list">
		u.*, r.id rid, r.role, r.desc, r.available r_available, p.id pid, p.name pname, p.type, p.permission, p.parent_id, p.parent_ids, p.available p_available 
	</sql>
	
	<select id="queryUserPermission" parameterType="java.lang.String" resultMap="userPermission_resMap">
		select <include refid="user_permission_column_list" /> from t_sys_user u, t_sys_user_role ur, t_sys_role r, t_sys_role_permission rp, t_sys_permission p
			where u.id = ur.user_id and ur.role_id = r.id and r.id = rp.role_id and rp.permission_id = p.id
				and u.username = #{username}
	</select>
	
</mapper>